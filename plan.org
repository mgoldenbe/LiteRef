#+STARTUP: nologdone

The plan is to develop LiteRef, a python daemon and an extension to org-ref that make things much more convenient and faster.

Since I would like to get to the actual literature survey as soon as possible, I am going to develop only the most important features and then continue development on the go. At some point, I may decide that the system is ripe enough to be sold.

* Current issues
* Features
** Daemon
- DONE Automatic assignment of a descriptive key.
- DONE Splitting .bib file containing more than one entry into several files.
- DONE A check whether the key already exists. Can apply the same action to the other entries in the new .bib file.
- DONE The newly added keys are in the clipboard.
- TODO Get rid of the proceeding/journal and the cross-reference.
  + TODO Update this feature, so this is done before asking whether to apply choice (in the case of repeated key) for remaining entries.
- DONE Handling .csv files produced using Link Klipper
Currently only from DBLP.
- DONE Handling of request to download PDF. Sources are configurable. Automated download with fall-back on manual. 
- DONE Venue query. *EXCLUDED FROM CURRENT RELEASE*
** org-ref-literef
- DONE Constant bib entry look-up (for whatever purpose) based on key.
- DONE Inserting a citation. This computes the list of .bib files.
  + TODO Keys can be sorted on key, author, title, venue, date of publication or date of addition (files added within a two seconds of each other are considered to be added at the same time) or combination of these.
- DONE Following citation by going to the right notes file.
- DONE Opening and getting PDF from citation or notes/bib file.
- DONE Splitting citations. The special characters are correctly handled.
  + TODO Support active tasks.
- DONE Command to put /current/ key into clipboard. 
- DONE Intelligent yanking.
- DONE Search for pdfs based on string, e.g. "Toronto". Search based on the contents of the first page.
- DONE Export without the need for specifying bibliography files.
- DONE Export with notes
  + Recursion
  + Narrowing
  + Optionally creating a section for the buffer
  + INCLUDE is handled
- DONE Annotation of citations.
- DONE Commands related to annotations.
- TODO Integration with PDF Tools (https://github.com/politza/pdf-tools) for referring to annotations (or at least pages) inside PDF. See https://emacs.stackexchange.com/a/24502/16048.
- TODO A graph of citation relationships using GraphViz DOT evaluation as shown here: https://vxlabs.com/2014/12/04/inline-graphviz-dot-evaluation-for-graphs-using-emacs-org-mode-and-org-babel/
  Simply create a temporary buffer, in which to evaluate the program.
* Creating on-line description + video
|------------------------------------------------------+-----------------------|
| *Implementation*                                     | *NDays*               |
|------------------------------------------------------+-----------------------|
| Implementation of copying                            | DONE                  |
| Implementation of custom sorting in helm-bitex       | DONE                  |
| Support of inline tasks                              | DONE                  |
| Integration with PDF Tools                           | DONE                  |
| Implementation of graph of citation relashionships   | 2                     |
| Implementation of annotations of references to tags. | CANCELED (narrowing!) |
| Running the server (past daemon) from emacs          | 1                     |
| Showing pdf in emacs after import                    | 1                     |
| Give a menu on :follow for citation links            | 1                     |
| Insertion of entry from clipboard                    | 1                     |
|------------------------------------------------------+-----------------------|
| *Writing + video*                                    |                       |
|------------------------------------------------------+-----------------------|
| Motivation                                           | DONE                  |
| Overall design                                       |                       |
| Adding papers                                        |                       |
| Working with citations                               |                       |
| Working with PDF                                     |                       |
| Switching to notes                                   |                       |
| Export                                               |                       |
| Working with annotations (of citations and of tags)  |                       |
| Installation, Version etc., future work etc.         |                       |
|------------------------------------------------------+-----------------------|
* Ideas of implementation
** Working with pdf
- A command to choose an annotation and link to it. When such a link is clicked, the page is opened and the annotation is activated.
- Commands I thought about before the above command.
  + A command to link to the currently open page of the pdf.
    * It would be nice to remember vertical scroll as well.
      - See https://emacs.stackexchange.com/q/35221/16048
  + FUTURE MAY BE A command to take a screenshot and link to the currently open page of the pdf.
    * Use =org-screenshot= and set the directory for the images to be in the paperâ€™s directory (the one whose pdf is open).
    * While not clear how to make the screen-shot clickable (https://emacs.stackexchange.com/q/35220/16048), put a separate link to the page of the pdf.
** Graph of citation relashionships
- See https://emacs.stackexchange.com/q/35076/16048
- Using Graph::Easy perl library to generate ascii representation looks best.
